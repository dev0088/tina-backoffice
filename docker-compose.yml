version: '3.5'
services:
  # MySQL Service
  db:
    image: mysql:5.7.22
    container_name: tina_mysql
    hostname: tina_mysql
    restart: always
    ports:
      - "3306:3306"
    networks:
      tina-network:
        aliases:
          - tina_mysql_network
    environment:
      MYSQL_DATABASE: tina_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./dbdata:/var/lib/mysql
      - ./sql:/root/sql
      - ./mysql/my.cnf:/etc/mysql/my.cnf

  # PHP Service
  app:
    # depends_on:
    #   - db
    # links:
    #   - db:tina_mysql
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tina
    hostname: tina_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: tina
      SERVICE_TAGS: dev
    working_dir: /var/www
    networks:
      tina-network:
        aliases:
          - tina_app_network
    tty: true
    ports:
      - "9000:9000"
    volumes:
       - ./:/var/www
       - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini

# Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/logs/:/var/logs/nginx/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      tina-network:
        aliases:
          - tina_nginx_network
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


#Docker Networks
networks:
  tina-network:
    name: tina-network
    driver: bridge

volumes:
  dbdata:
    driver: local
